'use strict';

const React = require('react');

const {
  useState,
  useEffect
} = require('react');

const axios = require('axios');

const {
  Text
} = require('ink');

const csv = require('csv-parser');

const fs = require('fs');

const {
  readCharities,
  readProfile
} = require("./read-helpers");

const App = ({
  name = "Stranger"
}) => {
  // React.useEffect(() => {
  // 	const test = await import('https://drive.google.com/drive/folders/1h5ud1dcA8lqxiFr4tWwWthzZd0pOqYiT')
  // })
  const [rand5, setRand5] = useState([]);

  myFunc = async name => {
    let myArr = [];
    await readCharities(name);
    myArr.push(res);
    setRand5(res);
    fun(res);
  };

  const fun = res => {
    const parsedData = [];

    for (let row of res) {
      parsedData.push(row);
    } // console.log(`!!!!!!!!!!!!!!!!!! ${JSON.stringify(parsedData)}`)
    // console.log(`checking state ${Math.floor(Math.random() * parsedData.length)}`)


    for (let i = 0; i < 12; i++) {
      let ind = Math.floor(Math.random() * parsedData.length);
      console.log(`looping `);
    }
  };

  if (name) {
    myFunc(name);
  }

  return /*#__PURE__*/React.createElement(Text, null, "HERE ");
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiYXhpb3MiLCJUZXh0IiwiY3N2IiwiZnMiLCJyZWFkQ2hhcml0aWVzIiwicmVhZFByb2ZpbGUiLCJBcHAiLCJuYW1lIiwicmFuZDUiLCJzZXRSYW5kNSIsIm15RnVuYyIsIm15QXJyIiwicHVzaCIsInJlcyIsImZ1biIsInBhcnNlZERhdGEiLCJyb3ciLCJpIiwiaW5kIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibGVuZ3RoIiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFDQyxFQUFBQSxRQUFEO0FBQVdDLEVBQUFBO0FBQVgsSUFBd0JGLE9BQU8sQ0FBQyxPQUFELENBQXJDOztBQUNBLE1BQU1HLEtBQUssR0FBR0gsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtBQUFDSSxFQUFBQTtBQUFELElBQVNKLE9BQU8sQ0FBQyxLQUFELENBQXRCOztBQUNBLE1BQU1LLEdBQUcsR0FBR0wsT0FBTyxDQUFDLFlBQUQsQ0FBbkI7O0FBQ0EsTUFBTU0sRUFBRSxHQUFHTixPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNO0FBQUVPLEVBQUFBLGFBQUY7QUFBaUJDLEVBQUFBO0FBQWpCLElBQWlDUixPQUFPLENBQUMsZ0JBQUQsQ0FBOUM7O0FBQ0EsTUFBTVMsR0FBRyxHQUFHLENBQUM7QUFBQ0MsRUFBQUEsSUFBSSxHQUFHO0FBQVIsQ0FBRCxLQUF5QjtBQUNwQztBQUNBO0FBRUE7QUFDQSxRQUFNLENBQUNDLEtBQUQsRUFBUUMsUUFBUixJQUFvQlgsUUFBUSxDQUFDLEVBQUQsQ0FBbEM7O0FBRUVZLEVBQUFBLE1BQU0sR0FBRyxNQUFPSCxJQUFQLElBQWdCO0FBQ3pCLFFBQUlJLEtBQUssR0FBRyxFQUFaO0FBQ0MsVUFBTVAsYUFBYSxDQUFDRyxJQUFELENBQW5CO0FBQ0FJLElBQUFBLEtBQUssQ0FBQ0MsSUFBTixDQUFXQyxHQUFYO0FBQ0FKLElBQUFBLFFBQVEsQ0FBQ0ksR0FBRCxDQUFSO0FBQ0FDLElBQUFBLEdBQUcsQ0FBQ0QsR0FBRCxDQUFIO0FBQ0QsR0FOQTs7QUFRRixRQUFNQyxHQUFHLEdBQUlELEdBQUQsSUFBUztBQUNwQixVQUFNRSxVQUFVLEdBQUcsRUFBbkI7O0FBQ0EsU0FBSSxJQUFJQyxHQUFSLElBQWVILEdBQWYsRUFBbUI7QUFDbEJFLE1BQUFBLFVBQVUsQ0FBQ0gsSUFBWCxDQUFnQkksR0FBaEI7QUFDQSxLQUptQixDQUtwQjtBQUNBOzs7QUFDQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsRUFBcEIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDNUIsVUFBSUMsR0FBRyxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCTixVQUFVLENBQUNPLE1BQXRDLENBQVY7QUFDQUMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQWEsVUFBYjtBQUVBO0FBQ0QsR0FaRDs7QUFjQSxNQUFHakIsSUFBSCxFQUFRO0FBQ1BHLElBQUFBLE1BQU0sQ0FBQ0gsSUFBRCxDQUFOO0FBQ0E7O0FBQ0Qsc0JBQU8sb0JBQUMsSUFBRCxnQkFBUDtBQUNBLENBakNEOztBQW1DQWtCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge3VzZVN0YXRlLCB1c2VFZmZlY3R9ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcbmNvbnN0IHtUZXh0fSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgY3N2ID0gcmVxdWlyZSgnY3N2LXBhcnNlcicpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgeyByZWFkQ2hhcml0aWVzLCByZWFkUHJvZmlsZSB9ID0gcmVxdWlyZShcIi4vcmVhZC1oZWxwZXJzXCIpO1xuY29uc3QgQXBwID0gKHtuYW1lID0gXCJTdHJhbmdlclwifSkgPT4ge1xuXHQvLyBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHQvLyBcdGNvbnN0IHRlc3QgPSBhd2FpdCBpbXBvcnQoJ2h0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzFoNXVkMWRjQThscXhpRnI0dFd3V3RoelpkMHBPcVlpVCcpXG5cblx0Ly8gfSlcblx0Y29uc3QgW3JhbmQ1LCBzZXRSYW5kNV0gPSB1c2VTdGF0ZShbXSlcblx0XG5cdFx0IG15RnVuYyA9IGFzeW5jIChuYW1lKSA9PiB7XG5cdFx0XHRsZXQgbXlBcnIgPSBbXVxuXHRcdFx0IGF3YWl0IHJlYWRDaGFyaXRpZXMobmFtZSlcblx0XHRcdFx0bXlBcnIucHVzaChyZXMpXG5cdFx0XHRcdHNldFJhbmQ1KHJlcylcblx0XHRcdFx0ZnVuKHJlcylcblx0XHR9XG5cblx0Y29uc3QgZnVuID0gKHJlcykgPT4ge1xuXHRcdGNvbnN0IHBhcnNlZERhdGEgPSBbXTtcblx0XHRmb3IobGV0IHJvdyBvZiByZXMpe1xuXHRcdFx0cGFyc2VkRGF0YS5wdXNoKHJvdylcblx0XHR9XG5cdFx0Ly8gY29uc29sZS5sb2coYCEhISEhISEhISEhISEhISEhISAke0pTT04uc3RyaW5naWZ5KHBhcnNlZERhdGEpfWApXG5cdFx0Ly8gY29uc29sZS5sb2coYGNoZWNraW5nIHN0YXRlICR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcGFyc2VkRGF0YS5sZW5ndGgpfWApXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCAxMjsgaSsrKSB7XG5cdFx0XHRsZXQgaW5kID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcGFyc2VkRGF0YS5sZW5ndGgpXG5cdFx0XHRjb25zb2xlLmxvZyhgbG9vcGluZyBgKVxuXHRcdFx0XG5cdFx0fVxuXHR9XG5cblx0aWYobmFtZSl7XG5cdFx0bXlGdW5jKG5hbWUpXG5cdH1cblx0cmV0dXJuIDxUZXh0PkhFUkUgPC9UZXh0PlxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdfQ==