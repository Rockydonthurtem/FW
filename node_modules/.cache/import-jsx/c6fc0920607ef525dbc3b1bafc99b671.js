'use strict';

const React = require('react');

const {
  useState,
  useEffect
} = require('react');

const axios = require('axios');

const {
  Text
} = require('ink');

const csv = require('csv-parser');

const fs = require('fs');

const {
  readCharities,
  readProfile
} = require("./read-helpers");

const App = ({
  name = "Stranger"
}) => {
  // React.useEffect(() => {
  // 	const test = await import('https://drive.google.com/drive/folders/1h5ud1dcA8lqxiFr4tWwWthzZd0pOqYiT')
  // })
  const [rand5, setRand5] = useState([]); // let myFunc = () => {
  // 	readCharities(name)
  // 	.then((res) => {
  // 		// console.log(`res ${JSON.stringify(res)}`)
  // 		setRand5(res)
  // 	})
  // 	.then(() => {
  // 		fun()
  // 	})
  // }

  useEffect(() => {
    let myFunc = () => {
      readCharities(name).then(res => {
        // console.log(`res ${JSON.stringify(res)}`)
        setRand5(res);
        fun(res);
      }); // .then(() => {
      // 	fun()
      // })
    };

    myFunc();
  }, []);

  const fun = res => {
    // console.log("***********", rand5[Math.floor(Math.random() * rand5.length)])
    const parsedData = [];

    for (let row of res) {
      parsedData.push(row);
    }

    let pick12 = [];

    for (let i = 0; i < 12; i++) {
      pick12.push(res[Math.floor(Math.random() * res.length)]);
    }

    console.table(`parsed ${JSON.stringify(pick12.length)}`);
  }; // if(name){
  // 	console.log(`checking state ${name}`)
  // 	myFunc(name)
  // }
  // myFunc()


  return /*#__PURE__*/React.createElement(Text, null, "HERE ");
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVpLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiYXhpb3MiLCJUZXh0IiwiY3N2IiwiZnMiLCJyZWFkQ2hhcml0aWVzIiwicmVhZFByb2ZpbGUiLCJBcHAiLCJuYW1lIiwicmFuZDUiLCJzZXRSYW5kNSIsIm15RnVuYyIsInRoZW4iLCJyZXMiLCJmdW4iLCJwYXJzZWREYXRhIiwicm93IiwicHVzaCIsInBpY2sxMiIsImkiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJjb25zb2xlIiwidGFibGUiLCJKU09OIiwic3RyaW5naWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNDLEVBQUFBLFFBQUQ7QUFBV0MsRUFBQUE7QUFBWCxJQUF3QkYsT0FBTyxDQUFDLE9BQUQsQ0FBckM7O0FBQ0EsTUFBTUcsS0FBSyxHQUFHSCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0FBQUNJLEVBQUFBO0FBQUQsSUFBU0osT0FBTyxDQUFDLEtBQUQsQ0FBdEI7O0FBQ0EsTUFBTUssR0FBRyxHQUFHTCxPQUFPLENBQUMsWUFBRCxDQUFuQjs7QUFDQSxNQUFNTSxFQUFFLEdBQUdOLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLE1BQU07QUFBRU8sRUFBQUEsYUFBRjtBQUFpQkMsRUFBQUE7QUFBakIsSUFBaUNSLE9BQU8sQ0FBQyxnQkFBRCxDQUE5Qzs7QUFDQSxNQUFNUyxHQUFHLEdBQUcsQ0FBQztBQUFDQyxFQUFBQSxJQUFJLEdBQUc7QUFBUixDQUFELEtBQXlCO0FBQ3BDO0FBQ0E7QUFFQTtBQUNBLFFBQU0sQ0FBQ0MsS0FBRCxFQUFRQyxRQUFSLElBQW9CWCxRQUFRLENBQUMsRUFBRCxDQUFsQyxDQUxvQyxDQU9wQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQUMsRUFBQUEsU0FBUyxDQUFDLE1BQU07QUFFZixRQUFJVyxNQUFNLEdBQUcsTUFBTTtBQUNsQk4sTUFBQUEsYUFBYSxDQUFDRyxJQUFELENBQWIsQ0FDQ0ksSUFERCxDQUNPQyxHQUFELElBQVM7QUFDZDtBQUNBSCxRQUFBQSxRQUFRLENBQUNHLEdBQUQsQ0FBUjtBQUNBQyxRQUFBQSxHQUFHLENBQUNELEdBQUQsQ0FBSDtBQUNBLE9BTEQsRUFEa0IsQ0FPbEI7QUFDQTtBQUNBO0FBQ0EsS0FWRDs7QUFXQUYsSUFBQUEsTUFBTTtBQUNOLEdBZFEsRUFjTixFQWRNLENBQVQ7O0FBZUEsUUFBTUcsR0FBRyxHQUFJRCxHQUFELElBQVM7QUFDcEI7QUFDQSxVQUFNRSxVQUFVLEdBQUcsRUFBbkI7O0FBQ0EsU0FBSSxJQUFJQyxHQUFSLElBQWVILEdBQWYsRUFBbUI7QUFDbEJFLE1BQUFBLFVBQVUsQ0FBQ0UsSUFBWCxDQUFnQkQsR0FBaEI7QUFDQTs7QUFDRCxRQUFJRSxNQUFNLEdBQUcsRUFBYjs7QUFDQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsRUFBcEIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDNUJELE1BQUFBLE1BQU0sQ0FBQ0QsSUFBUCxDQUFZSixHQUFHLENBQUNPLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JULEdBQUcsQ0FBQ1UsTUFBL0IsQ0FBRCxDQUFmO0FBQ0E7O0FBQ0RDLElBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUFlLFVBQVNDLElBQUksQ0FBQ0MsU0FBTCxDQUFlVCxNQUFNLENBQUNLLE1BQXRCLENBQThCLEVBQXREO0FBRUEsR0FaRCxDQWhDb0MsQ0E2Q3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBLHNCQUFPLG9CQUFDLElBQUQsZ0JBQVA7QUFDQSxDQW5ERDs7QUFxREFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnRCLEdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge3VzZVN0YXRlLCB1c2VFZmZlY3R9ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTtcbmNvbnN0IHtUZXh0fSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgY3N2ID0gcmVxdWlyZSgnY3N2LXBhcnNlcicpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgeyByZWFkQ2hhcml0aWVzLCByZWFkUHJvZmlsZSB9ID0gcmVxdWlyZShcIi4vcmVhZC1oZWxwZXJzXCIpO1xuY29uc3QgQXBwID0gKHtuYW1lID0gXCJTdHJhbmdlclwifSkgPT4ge1xuXHQvLyBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHQvLyBcdGNvbnN0IHRlc3QgPSBhd2FpdCBpbXBvcnQoJ2h0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9kcml2ZS9mb2xkZXJzLzFoNXVkMWRjQThscXhpRnI0dFd3V3RoelpkMHBPcVlpVCcpXG5cblx0Ly8gfSlcblx0Y29uc3QgW3JhbmQ1LCBzZXRSYW5kNV0gPSB1c2VTdGF0ZShbXSlcblx0XG5cdC8vIGxldCBteUZ1bmMgPSAoKSA9PiB7XG5cdC8vIFx0cmVhZENoYXJpdGllcyhuYW1lKVxuXHQvLyBcdC50aGVuKChyZXMpID0+IHtcblx0Ly8gXHRcdC8vIGNvbnNvbGUubG9nKGByZXMgJHtKU09OLnN0cmluZ2lmeShyZXMpfWApXG5cdC8vIFx0XHRzZXRSYW5kNShyZXMpXG5cdC8vIFx0fSlcblx0Ly8gXHQudGhlbigoKSA9PiB7XG5cdC8vIFx0XHRmdW4oKVxuXHQvLyBcdH0pXG5cdC8vIH1cblx0dXNlRWZmZWN0KCgpID0+IHtcblxuXHRcdGxldCBteUZ1bmMgPSAoKSA9PiB7XG5cdFx0XHRyZWFkQ2hhcml0aWVzKG5hbWUpXG5cdFx0XHQudGhlbigocmVzKSA9PiB7XG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKGByZXMgJHtKU09OLnN0cmluZ2lmeShyZXMpfWApXG5cdFx0XHRcdHNldFJhbmQ1KHJlcylcblx0XHRcdFx0ZnVuKHJlcylcblx0XHRcdH0pXG5cdFx0XHQvLyAudGhlbigoKSA9PiB7XG5cdFx0XHQvLyBcdGZ1bigpXG5cdFx0XHQvLyB9KVxuXHRcdH1cblx0XHRteUZ1bmMoKVxuXHR9LCBbXSlcblx0Y29uc3QgZnVuID0gKHJlcykgPT4ge1xuXHRcdC8vIGNvbnNvbGUubG9nKFwiKioqKioqKioqKipcIiwgcmFuZDVbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcmFuZDUubGVuZ3RoKV0pXG5cdFx0Y29uc3QgcGFyc2VkRGF0YSA9IFtdO1xuXHRcdGZvcihsZXQgcm93IG9mIHJlcyl7XG5cdFx0XHRwYXJzZWREYXRhLnB1c2gocm93KVxuXHRcdH1cblx0XHRsZXQgcGljazEyID0gW11cblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IDEyOyBpKyspIHtcblx0XHRcdHBpY2sxMi5wdXNoKHJlc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiByZXMubGVuZ3RoKV0pXG5cdFx0fVxuXHRcdGNvbnNvbGUudGFibGUoYHBhcnNlZCAke0pTT04uc3RyaW5naWZ5KHBpY2sxMi5sZW5ndGgpfWApXG5cblx0fVxuXHQvLyBpZihuYW1lKXtcblx0Ly8gXHRjb25zb2xlLmxvZyhgY2hlY2tpbmcgc3RhdGUgJHtuYW1lfWApXG5cdC8vIFx0bXlGdW5jKG5hbWUpXG5cdC8vIH1cblx0Ly8gbXlGdW5jKClcblx0cmV0dXJuIDxUZXh0PkhFUkUgPC9UZXh0PlxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcbiJdfQ==